# Runs the release workflow when a release-* branch is pushed
# - Bump version
# - Build -> Test -> Publish
# Tag -> Open PR to main - Push

name: Create Release

on:
  push:
    branches:
      - 'release-v*'
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release-flow:
    runs-on:
      ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version
        run: |
          RELEASE_VERSION=$(echo "$GITHUB_REF" | sed 's/refs\/heads\/release-//')
          # Check if Version is retrieved correctly
          if [ -z "$RELEASE_VERSION" ] || [[ ! "$RELEASE_VERSION" =~ ^v[0-9] ]]; then
            echo "RELEASE_VERSION is not set"
            exit 1
          else
            echo "RELEASE_VERSION is set to $RELEASE_VERSION"
            echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          fi

      - name: Bump version
        run: |
          echo "Release version: $RELEASE_VERSION" > release.txt

      - name: Setup Github CLI
        if: ${{ env.ACT }}
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Create PR to main
        run: |
          set -e
          echo "Open PR to main"
          gh --version
          export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          curl --request GET --url "https://api.github.com/octocat" --header "Authorization: Bearer $GITHUB_TOKEN" --header "X-GitHub-Api-Version: 2022-11-28"
          # Configure git and Push updates
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global user.name 'github-actions[bot]'
          git config pull.rebase false
          message="Update Release Branch for ${RELEASE_VERSION}"
          git add release.txt
          git commit -m "$message"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git push

      - name: Test
        run: |
          echo "Printing some ENV Vars for testing"
          echo "Github ref -------------------"
          echo "GITHUB_REF: ${{ github.ref }}"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_REF_TYPE: ${{ github.ref_type }}"
          echo "GITHUB_HEAD_REF: ${{ github.head_ref }}"
          echo "GITHUB_BASE_REF: ${{ github.base_ref }}"
          echo "\n"
          echo "Github event -------------------"
          echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
          echo "GITHUB_EVENT_PATH: ${{ github.event_name }}"
          echo "GITHUB_EVENT_REF: ${{ github.event.ref }}"
          echo "\n"
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
          echo "GITHUB_ACTION: ${{ github.action }}"
          echo "GITHUB_ACTOR: ${{ github.actor }}"
          echo "GITHUB_ACTOR_ID: ${{ github.actor_id }}"
          echo "GITHUB_JOB: ${{ github.job }}"
          echo "GITHUB_RUN_ID: ${{ github.run_id }}"
          echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "GITHUB_WORKFLOW: ${{ github.workflow }}"
          echo "GITHUB_ENV: ${{ github.env }}"
          echo "Release version: $RELEASE_VERSION"
